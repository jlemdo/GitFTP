name: ðŸ”„ Sync FTP to GitHub

on:
  push:
    branches:
      - main

jobs:
  ftp-sync:
    name: ðŸ”„ Sync FTP Changes to GitHub
    runs-on: ubuntu-latest

    steps:
      - name: ðŸšš Checkout cÃ³digo
        uses: actions/checkout@v3

      - name: ðŸ“¡ Instalar cliente FTP y rsync
        run: sudo apt-get update && sudo apt-get install lftp rsync

      - name: ðŸ”„ Detectar y descargar cambios desde FTP
        env:
          FTP_USERNAME: ${{ secrets.ftp_username }}
          FTP_PASSWORD: ${{ secrets.ftp_password }}
          FTP_HOST: ${{ secrets.ftp_host }}
        run: |
          # Crear directorio temporal para los archivos descargados
          mkdir -p ftp_download
          lftp -u $FTP_USERNAME,$FTP_PASSWORD ftp://$FTP_HOST -e "set ssl:verify-certificate no; mirror --verbose --delete --no-empty-dirs --no-perms ./ ftp_download; bye"
          echo "Listando archivos despuÃ©s de la sincronizaciÃ³n FTP:"
          ls -la ftp_download

      - name: ðŸ”„ Sincronizar archivos desde directorio temporal al repositorio local
        run: |
          rsync -av --delete ftp_download/ ./
          echo "Listando archivos despuÃ©s de rsync:"
          ls -la

      - name: ðŸ”„ Configurar Git con token de acceso
        run: |
          git config --global user.email "jlelpella@gmail.com"
          git config --global user.name "jlemdo"
          # AsegÃºrate de que tu token estÃ© almacenado en las Secrets de GitHub
          git remote set-url origin https://x-access-token:${{ secrets.FTP_TOKEN }}@github.com/jlemdo/GitFTP.git

      - name: ðŸ”„ Hacer commit de todos los archivos y carpetas
        run: |
          echo "Estado de Git antes de agregar archivos:"
          git status
          git add --all
          git status  # Verificar que los archivos se han aÃ±adido correctamente
          git commit -m "Actualizar cambios desde FTP" || echo "No hay cambios para commit"
          git push
